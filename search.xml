<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>通过github使用git</title>
      <link href="/2025/02/16/github%E4%BD%BF%E7%94%A8/"/>
      <url>/2025/02/16/github%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1>安装git</h1><p>进入Git官网<a href="https://git-scm.com/">Git官网</a>，点击 <strong>Downloads</strong> 下载：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/1.png" alt></p><p>选择你的系统类型，我的是 Windows：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/2.png" alt></p><p>最新版本下载：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/3.png" alt></p><p>安装一切默认</p><p>在任意文件夹点击键盘shift+鼠标右键，出现下图中图标即完成：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/4.png" alt></p><p>打开 Git Bash, 输入git，回车得到如下图：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/5.png" alt></p><p>此时你的 Git 就已经安装完成啦！</p><h1>绑定GitHub并提交文件</h1><p>1.绑定GitHub</p><p>我们要用git上传文件到GitHub首先得利用SSH登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/6.png" alt></p><p>如上图所示，即已安装 SSH. 然后，输入 ssh-keygen -t rsa 命令**（注意空格）**，表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub. **（注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.）**文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux 系统：~/.ssh</span><br><span class="line"></span><br><span class="line">Mac 系统：~/.ssh</span><br><span class="line"></span><br><span class="line">Windows 10 ：C:/Users/ASUS/.ssh</span><br></pre></td></tr></table></figure><p>接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容，你可以通过目录找到 id_rsa.pub 文件的位置，用记事本打开文件复制。如果你实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/.ssh </span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line"></span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/7.png" alt></p><p>如下图，先点击 <strong>SSH and GPG keys</strong>，再点击 <strong>New SSH key.</strong></p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/8.png" alt></p><p>将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 <strong>Add SSH key</strong>，如下图：（标题填不填无所谓）</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/9.png" alt></p><p>验证是否成功，我们可以通过在 Git Bash 中输入 ssh -T <a href="mailto:git@github.com">git@github.com</a> 进行检验：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/10.png" alt></p><p>第一次会出现这种情况，填 yes 就行，若出现下图中的情况，则表明绑定成功：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/11.png" alt></p><p><strong>2.提交文件</strong></p><ol><li>直接将远程仓库 clone 到本地；</li><li>将文件添加并 commit 到本地仓库；</li><li>将本地仓库的内容push到远程仓库。</li></ol><p>新建一个项目：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/12.png" alt></p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/13.png" alt></p><p>点击进入项目：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/14.png" alt></p><p>复制ssh地址链接：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/15.png" alt></p><p>然后在我们准备当作本地仓库的文件夹打开git bash输入git clone+复制好的ssh地址：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/16.png" alt></p><p>现在我们创建一个 text.txt 测试文件，如下图：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/17.png" alt></p><p>git status 命令查看仓库状态</p><p>text 已经是一个 Git 仓库了，而我们刚刚创建的文件 text.txt 没有被追踪，也就是没有提交到本地仓库。现在我们 git add 命令将文件添加到了「临时缓冲区」，再用 git push将其提交到本地仓库，如下图：</p><p><img src="/2025/02/16/github%E4%BD%BF%E7%94%A8/18.png" alt></p><p>这里已经是最新状态了</p><p>如果是第一次提交的话，就会出现下图的情况，会让你输入用户名和邮箱：</p><p><strong>你只要再加两行代码就行：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name&quot;github名字&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email&quot;@.com&quot;</span><br></pre></td></tr></table></figure><p>完成后输入 git log 命令查看仓库提交日志：</p><p>若是还是不成功，可以下面的方法：</p><p>单独为项目配置的方法(全局和单独配置都存在的时候会默认项目单独配置的)：</p><p>打开项目所在目录，找到隐藏的.git文件夹。注意这个文件夹是隐藏的，显示隐藏出来就行。</p><p>打开文件夹里的config文件，推荐用nodepad++打开。</p><p>添加这三行到文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line"></span><br><span class="line">name = XXX(自己的名称)</span><br><span class="line"></span><br><span class="line">email = XXXX(邮箱)</span><br></pre></td></tr></table></figure><p>和上面一样git add 命令将文件添加到了「临时缓冲区」，再用 git push将其提交到本地仓库就行了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/02/16/hello-world/"/>
      <url>/2025/02/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
